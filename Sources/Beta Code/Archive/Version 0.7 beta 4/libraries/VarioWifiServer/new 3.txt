{
    "Gnuvarioe": {
        "version": "1.0"
    },
    "systeme": {
        "BT_ENABLE": 0,
        "NO_RECORD": 0,
        "ALARM_SDCARD": 1,
        "BEEP_GPSFIX": 1,
        "BEEP_FLYBEGIN": 1,
				"BEEP_VARIOBEGIN": 0,
				"COMPENSATION_TEMP": -6.1,
				"COMPENSATION_GPSALTI": -70,
				"SLEEP_TIMEOUT_MINUTES": 20,
				"SLEEP_THRESHOLD_CPS": 50,
				"MULTIDISPLAY_DURATION": 2000
    },
    "general": {
        "PILOT_NAME": "MagaliXXXXXXXXXXXXXXXXXXXXXXXX",
        "GLIDER_NAME": "MAC-PARA Muse 3XXXXXXXXXXXXXXX",
				"GLIDER": {
				  "GLIDER_SELECT": 0,
					"GLIDER_NAME1": "MAC-PARA Muse 3XXXXXXXXXXXXXXX",
					"GLIDER_NAME2": "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
					"GLIDER_NAME3": "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
					"GLIDER_NAME4": "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
				},
        "TIME_ZONE": 1
    },
    "vario": {
        "SINKING_THRESHOLD": -2.1,
        "CLIMBING_THRESHOLD": 0.2,
        "NEAR_CLIMBING_SENSITIVITY": 0.5,
        "ENABLE_NEAR_CLIMBING_ALARM": 0,
        "ENABLE_NEAR_CLIMBING_BEEP": 0,
        "DISPLAY_INTEGRATED_CLIMB_RATE": 0,
        "CLIMB_PERIOD_COUNT": 10,
        "SETTINGS_GLIDE_RATIO_PERIOD_COUNT": 20,
        "RATIO_MAX_VALUE": 30.1,
        "RATIO_MIN_SPEED": 10.1,
        "RATIO_CLIMB_RATE": 2,
        "SENT_LXNAV_SENTENCE": 1
   },
    "flightstart": {
        "FLIGHT_START_MIN_TIMESTAMP": 15000,
        "FLIGHT_START_VARIO_LOW_THRESHOLD": -0.5,
        "FLIGHT_START_VARIO_HIGH_THRESHOLD": 0.5,
        "FLIGHT_START_MIN_SPEED": 8.1,
        "RECORD_WHEN_FLIGHT_START": 1
    }
}


const size_t capacity = JSON_OBJECT_SIZE(1) + JSON_OBJECT_SIZE(4) + 3*JSON_OBJECT_SIZE(5) + JSON_OBJECT_SIZE(11) + JSON_OBJECT_SIZE(12) + 1040;
DynamicJsonDocument doc(capacity);

const char* json = "{\"Gnuvarioe\":{\"version\":\"1.0\"},\"systeme\":{\"BT_ENABLE\":0,\"NO_RECORD\":0,\"ALARM_SDCARD\":1,\"BEEP_GPSFIX\":1,\"BEEP_FLYBEGIN\":1,\"BEEP_VARIOBEGIN\":0,\"COMPENSATION_TEMP\":-6.1,\"COMPENSATION_GPSALTI\":-70,\"SLEEP_TIMEOUT_MINUTES\":20,\"SLEEP_THRESHOLD_CPS\":50,\"MULTIDISPLAY_DURATION\":2000},\"general\":{\"PILOT_NAME\":\"MagaliXXXXXXXXXXXXXXXXXXXXXXXX\",\"GLIDER_NAME\":\"MAC-PARA Muse 3XXXXXXXXXXXXXXX\",\"GLIDER\":{\"GLIDER_SELECT\":0,\"GLIDER_NAME1\":\"MAC-PARA Muse 3XXXXXXXXXXXXXXX\",\"GLIDER_NAME2\":\"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\"GLIDER_NAME3\":\"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\"GLIDER_NAME4\":\"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"},\"TIME_ZONE\":1},\"vario\":{\"SINKING_THRESHOLD\":-2.1,\"CLIMBING_THRESHOLD\":0.2,\"NEAR_CLIMBING_SENSITIVITY\":0.5,\"ENABLE_NEAR_CLIMBING_ALARM\":0,\"ENABLE_NEAR_CLIMBING_BEEP\":0,\"DISPLAY_INTEGRATED_CLIMB_RATE\":0,\"CLIMB_PERIOD_COUNT\":10,\"SETTINGS_GLIDE_RATIO_PERIOD_COUNT\":20,\"RATIO_MAX_VALUE\":30.1,\"RATIO_MIN_SPEED\":10.1,\"RATIO_CLIMB_RATE\":2,\"SENT_LXNAV_SENTENCE\":1},\"flightstart\":{\"FLIGHT_START_MIN_TIMESTAMP\":15000,\"FLIGHT_START_VARIO_LOW_THRESHOLD\":-0.5,\"FLIGHT_START_VARIO_HIGH_THRESHOLD\":0.5,\"FLIGHT_START_MIN_SPEED\":8.1,\"RECORD_WHEN_FLIGHT_START\":1}}";

deserializeJson(doc, json);

const char* Gnuvarioe_version = doc["Gnuvarioe"]["version"]; // "1.0"

JsonObject systeme = doc["systeme"];
int systeme_BT_ENABLE = systeme["BT_ENABLE"]; // 0
int systeme_NO_RECORD = systeme["NO_RECORD"]; // 0
int systeme_ALARM_SDCARD = systeme["ALARM_SDCARD"]; // 1
int systeme_BEEP_GPSFIX = systeme["BEEP_GPSFIX"]; // 1
int systeme_BEEP_FLYBEGIN = systeme["BEEP_FLYBEGIN"]; // 1
int systeme_BEEP_VARIOBEGIN = systeme["BEEP_VARIOBEGIN"]; // 0
float systeme_COMPENSATION_TEMP = systeme["COMPENSATION_TEMP"]; // -6.1
int systeme_COMPENSATION_GPSALTI = systeme["COMPENSATION_GPSALTI"]; // -70
int systeme_SLEEP_TIMEOUT_MINUTES = systeme["SLEEP_TIMEOUT_MINUTES"]; // 20
int systeme_SLEEP_THRESHOLD_CPS = systeme["SLEEP_THRESHOLD_CPS"]; // 50
int systeme_MULTIDISPLAY_DURATION = systeme["MULTIDISPLAY_DURATION"]; // 2000

JsonObject general = doc["general"];
const char* general_PILOT_NAME = general["PILOT_NAME"]; // "MagaliXXXXXXXXXXXXXXXXXXXXXXXX"
const char* general_GLIDER_NAME = general["GLIDER_NAME"]; // "MAC-PARA Muse 3XXXXXXXXXXXXXXX"

JsonObject general_GLIDER = general["GLIDER"];
int general_GLIDER_GLIDER_SELECT = general_GLIDER["GLIDER_SELECT"]; // 0
const char* general_GLIDER_GLIDER_NAME1 = general_GLIDER["GLIDER_NAME1"]; // "MAC-PARA Muse 3XXXXXXXXXXXXXXX"
const char* general_GLIDER_GLIDER_NAME2 = general_GLIDER["GLIDER_NAME2"]; // "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
const char* general_GLIDER_GLIDER_NAME3 = general_GLIDER["GLIDER_NAME3"]; // "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
const char* general_GLIDER_GLIDER_NAME4 = general_GLIDER["GLIDER_NAME4"]; // "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"

int general_TIME_ZONE = general["TIME_ZONE"]; // 1

JsonObject vario = doc["vario"];
float vario_SINKING_THRESHOLD = vario["SINKING_THRESHOLD"]; // -2.1
float vario_CLIMBING_THRESHOLD = vario["CLIMBING_THRESHOLD"]; // 0.2
float vario_NEAR_CLIMBING_SENSITIVITY = vario["NEAR_CLIMBING_SENSITIVITY"]; // 0.5
int vario_ENABLE_NEAR_CLIMBING_ALARM = vario["ENABLE_NEAR_CLIMBING_ALARM"]; // 0
int vario_ENABLE_NEAR_CLIMBING_BEEP = vario["ENABLE_NEAR_CLIMBING_BEEP"]; // 0
int vario_DISPLAY_INTEGRATED_CLIMB_RATE = vario["DISPLAY_INTEGRATED_CLIMB_RATE"]; // 0
int vario_CLIMB_PERIOD_COUNT = vario["CLIMB_PERIOD_COUNT"]; // 10
int vario_SETTINGS_GLIDE_RATIO_PERIOD_COUNT = vario["SETTINGS_GLIDE_RATIO_PERIOD_COUNT"]; // 20
float vario_RATIO_MAX_VALUE = vario["RATIO_MAX_VALUE"]; // 30.1
float vario_RATIO_MIN_SPEED = vario["RATIO_MIN_SPEED"]; // 10.1
int vario_RATIO_CLIMB_RATE = vario["RATIO_CLIMB_RATE"]; // 2
int vario_SENT_LXNAV_SENTENCE = vario["SENT_LXNAV_SENTENCE"]; // 1

JsonObject flightstart = doc["flightstart"];
int flightstart_FLIGHT_START_MIN_TIMESTAMP = flightstart["FLIGHT_START_MIN_TIMESTAMP"]; // 15000
float flightstart_FLIGHT_START_VARIO_LOW_THRESHOLD = flightstart["FLIGHT_START_VARIO_LOW_THRESHOLD"]; // -0.5
float flightstart_FLIGHT_START_VARIO_HIGH_THRESHOLD = flightstart["FLIGHT_START_VARIO_HIGH_THRESHOLD"]; // 0.5
float flightstart_FLIGHT_START_MIN_SPEED = flightstart["FLIGHT_START_MIN_SPEED"]; // 8.1
int flightstart_RECORD_WHEN_FLIGHT_START = flightstart["RECORD_WHEN_FLIGHT_START"]; // 1
Serializing program
const size_t capacity = JSON_OBJECT_SIZE(1) + JSON_OBJECT_SIZE(4) + 3*JSON_OBJECT_SIZE(5) + JSON_OBJECT_SIZE(11) + JSON_OBJECT_SIZE(12);
DynamicJsonDocument doc(capacity);

JsonObject Gnuvarioe = doc.createNestedObject("Gnuvarioe");
Gnuvarioe["version"] = "1.0";

JsonObject systeme = doc.createNestedObject("systeme");
systeme["BT_ENABLE"] = 0;
systeme["NO_RECORD"] = 0;
systeme["ALARM_SDCARD"] = 1;
systeme["BEEP_GPSFIX"] = 1;
systeme["BEEP_FLYBEGIN"] = 1;
systeme["BEEP_VARIOBEGIN"] = 0;
systeme["COMPENSATION_TEMP"] = -6.1;
systeme["COMPENSATION_GPSALTI"] = -70;
systeme["SLEEP_TIMEOUT_MINUTES"] = 20;
systeme["SLEEP_THRESHOLD_CPS"] = 50;
systeme["MULTIDISPLAY_DURATION"] = 2000;

JsonObject general = doc.createNestedObject("general");
general["PILOT_NAME"] = "MagaliXXXXXXXXXXXXXXXXXXXXXXXX";
general["GLIDER_NAME"] = "MAC-PARA Muse 3XXXXXXXXXXXXXXX";

JsonObject general_GLIDER = general.createNestedObject("GLIDER");
general_GLIDER["GLIDER_SELECT"] = 0;
general_GLIDER["GLIDER_NAME1"] = "MAC-PARA Muse 3XXXXXXXXXXXXXXX";
general_GLIDER["GLIDER_NAME2"] = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
general_GLIDER["GLIDER_NAME3"] = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
general_GLIDER["GLIDER_NAME4"] = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
general["TIME_ZONE"] = 1;

JsonObject vario = doc.createNestedObject("vario");
vario["SINKING_THRESHOLD"] = -2.1;
vario["CLIMBING_THRESHOLD"] = 0.2;
vario["NEAR_CLIMBING_SENSITIVITY"] = 0.5;
vario["ENABLE_NEAR_CLIMBING_ALARM"] = 0;
vario["ENABLE_NEAR_CLIMBING_BEEP"] = 0;
vario["DISPLAY_INTEGRATED_CLIMB_RATE"] = 0;
vario["CLIMB_PERIOD_COUNT"] = 10;
vario["SETTINGS_GLIDE_RATIO_PERIOD_COUNT"] = 20;
vario["RATIO_MAX_VALUE"] = 30.1;
vario["RATIO_MIN_SPEED"] = 10.1;
vario["RATIO_CLIMB_RATE"] = 2;
vario["SENT_LXNAV_SENTENCE"] = 1;

JsonObject flightstart = doc.createNestedObject("flightstart");
flightstart["FLIGHT_START_MIN_TIMESTAMP"] = 15000;
flightstart["FLIGHT_START_VARIO_LOW_THRESHOLD"] = -0.5;
flightstart["FLIGHT_START_VARIO_HIGH_THRESHOLD"] = 0.5;
flightstart["FLIGHT_START_MIN_SPEED"] = 8.1;
flightstart["RECORD_WHEN_FLIGHT_START"] = 1;

serializeJson(doc, Serial);